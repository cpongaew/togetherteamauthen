{"version":3,"sources":["scripts/app-ed07980c79.js"],"names":["angular","module","provider","$get","parent","parents","base","templates","index","create","abstract","view","edit","delete","params","controllers","$scope","$on","event","resource","console","log","currentResource","loadFormPromise","then","form","loadSubmissionPromise","err","submission","$stateParams","HomeController","controller","CalculateController","runBlock","$log","$rootScope","AppConfig","debug","forEach","forms","url","$inject","run","routerConfig","$stateProvider","$urlRouterProvider","$injector","FormioProvider","FormioResourceProvider","setBaseUrl","apiUrl","state","templateUrl","controllerAs","resources","name","register","get","otherwise","config","constant","moment","$logProvider","$locationProvider","hashPrefix","debugEnabled","$templateCache","put"],"mappings":"CAAA,WACE,YACAA,SAAQC,OAAO,aACb,aACA,YACA,eACA,SACA,sBAYJD,QAAQC,OAAO,aACZC,SAAS,eAAgB,WACxB,OACEC,KAAM,WAAa,MAAO,OAM1BC,OAAQ,GAORC,WAMAC,KAAM,GAONC,WAMEC,MAAO,GAKPC,OAAQ,GAMRC,WAAU,GAKVC,KAAM,GAKNC,KAAM,GAKNC,SAAQ,IAgBVC,QACEN,SACAC,UACAC,cACAC,QACAC,QACAC,aAMFE,aACEP,OAAQ,SAAU,SAASQ,GAEzBA,EAAOC,IAAI,UAAW,SAASC,EAAOC,GACpCC,QAAQC,IAAIF,OAGhBT,WAAU,KACVC,MAAO,SAAU,SAASK,GAExBA,EAAOM,gBAAgBC,gBAAgBC,KAAK,SAASC,GACnDL,QAAQC,IAAII,KAIdT,EAAOM,gBAAgBI,sBAAsBF,KAAK,SAASL,GACzDC,QAAQC,IAAIF,OAGhBV,QAAS,SAAU,SAASO,GAC1BA,EAAOC,IAAI,iBAAkB,SAASU,EAAKC,GAEzCR,QAAQC,IAAIO,OAOhBhB,MAAO,SAAU,SAASI,GACxBA,EAAOC,IAAI,iBAAkB,SAASU,EAAKC,GAEzCR,QAAQC,IAAIO,OAGhBf,UAAS,SAAU,eAAgB,SAASG,EAAQa,GAClDb,EAAOC,IAAI,SAAU,SAASU,GAE5BP,QAAQC,IAAI,8BAOxB,WACE,YAOA,SAASS,MALT9B,QACGC,OAAO,aACP8B,WAAW,iBAAkBD,MAMlC,WACC,YAOA,SAASE,MALThC,QACEC,OAAO,aACP8B,WAAW,sBAAuBC,MAKrC,WACE,YAOA,SAASC,GAASC,EAAMC,EAAYC,GAClCF,EAAKG,MAAM,gBAGXrC,QAAQsC,QAAQF,EAAUG,MAAO,SAASC,EAAKf,GAC7CU,EAAWV,GAAQe,IAVvBP,EAASQ,SAAW,OAAQ,aAAc,aAA1CzC,QACGC,OAAO,aACPyC,IAAIT,MAcT,WACE,YAOA,SAASU,GAAaC,EAAgBC,EAAoBC,EAAWC,EAAgBX,EAAWY,GAC9FD,EAAeE,WAAWb,EAAUc,QAEpCN,EACGO,MAAM,QACLX,IAAK,IACLY,YAAa,qBACbrB,WAAY,iBACZsB,aAAc,SAElBF,MAAM,aACFX,IAAK,aACLY,YAAa,+BACbrB,WAAY,sBACZsB,aAAc,cAElBF,MAAM,eACFX,IAAK,eACLY,YAAa,iCACbrB,WAAY,sBACZsB,aAAc,cAIlBrD,QAAQsC,QAAQF,EAAUkB,UAAW,SAASnC,EAAUoC,GACtDP,EAAuBQ,SAASD,EAAMpC,EAASM,KAAMqB,EAAUW,IAAItC,EAASA,SAAW,eAGzF0B,EAAmBa,UAAU,KAhC/Bf,EAAaF,SAAW,iBAAkB,qBAAsB,YAAa,iBAAkB,YAAa,0BAD5GzC,QACGC,OAAO,aACP0D,OAAOhB,MAqCZ,WACE,YACA3C,SACGC,OAAO,aACP2D,SAAS,SAAUC,WAGxB,WACE,YAOA,SAASF,GAAOG,EAAcC,GAC5BA,EAAkBC,WAAW,IAC7BF,EAAaG,cAAa,GAL5BN,EAAOlB,SAAW,eAAgB,qBAFlCzC,QACGC,OAAO,aACP0D,OAAOA,MASZ3D,QAAQC,OAAO,aAAayC,KAAK,iBAAkB,SAASwB,GAAiBA,EAAeC,IAAI,qBAAqB,mtBACrHD,EAAeC,IAAI,+BAA+B,4LAClDD,EAAeC,IAAI,iCAAiC,8TACpDD,EAAeC,IAAI,yBAAyB","file":"scripts/app-ed07980c79.js","sourcesContent":["(function() {\r\n  'use strict';\r\n  angular.module('formioApp', [\r\n    'ngSanitize',\r\n    'ui.router',\r\n    'ui.bootstrap',\r\n    'formio',\r\n    'ngFormioHelper'\r\n  ]);\r\n})();\r\n\n/**\r\n *  The following shows an example resource provider.\r\n *\r\n *  This allows you to hook into the CRUD operations for a single Form.io\r\n *  resource as it is being indexed, viewed, deleted, created, updated, etc. By\r\n *  providing your logic here, you can control how Form.io behaves within your\r\n *  application.\r\n */\r\nangular.module('formioApp')\r\n  .provider('UserResource', function() {\r\n    return {\r\n      $get: function() { return null; },\r\n\r\n      /**\r\n       * The parent is name of the Resource field within your resource that points to the parent resource. This ultimately\r\n       * is passed along as an array to the \"parents\" paramter below.\r\n       */\r\n      parent: '',\r\n\r\n      /**\r\n       * Allows you to provide multiple parents or the names of the resource fields that serve as the parent of this resource.\r\n       * For example, if you wish your users to be within Groups, and you have a Resource and Resource field within the User\r\n       * where the API key is 'group', you would provide the following. ['group']\r\n       */\r\n      parents: [],\r\n\r\n      /**\r\n       * This allows you to nest your resources within a UI Router path. For example, if you wish users to be within groups, and\r\n       * you have a Group resource, you could provide the following base.  'group.'\r\n       */\r\n      base: '',\r\n\r\n      /**\r\n       * Allow you to change the template for any view of this resource. You can override any of these templates by copying the\r\n       * corresponding template within the bower_components/ng-formio-helper/src/templates/resource folder. You can copy any of\r\n       * those templates, paste that to your own views folder, and then provide the new path to that template below.\r\n       */\r\n      templates: {\r\n\r\n        /**\r\n         * The index view for this resource where all of the resources can be seen. By default, the ngFormioHelper will set this\r\n         * to a view of the data grid.\r\n         */\r\n        index: '',\r\n\r\n        /**\r\n         * This is the create view. This typically will contain the <formio> directive to allow you to create a new Resource.\r\n         */\r\n        create: '',\r\n\r\n        /**\r\n         * The abstract view is the view that wraps the \"view\", \"edit\", and \"delete\" views and typically provides the tabs where you\r\n         * can navigate between those views.\r\n         */\r\n        abstract: '',\r\n\r\n        /**\r\n         * The view is the view page for the resource.\r\n         */\r\n        view: '',\r\n\r\n        /**\r\n         * This is the edit view. This will have the <formio> directive with the submission provided into the directive.\r\n         */\r\n        edit: '',\r\n\r\n        /**\r\n         * This is the delete view, which is really just a confirmation page asking if you would like to delete the Resource.\r\n         */\r\n        delete: ''\r\n      },\r\n\r\n      /**\r\n       * Provide customer parameters to each of the operations for this resource. This allows you to pass in custom objects into\r\n       * each state. For example, lets say you wish to pass in the whole object of \"customer\" into an Order resource, you could provide\r\n       * the following to the view params.\r\n       *\r\n       *   params: {\r\n       *     view: {customer: null}\r\n       *   }\r\n       *\r\n       * This would then allow you to call that state by passing in the whole object.\r\n       *\r\n       *   $state.go('order.view', {customer: customer});\r\n       */\r\n      params: {\r\n        index: {},\r\n        create: {},\r\n        abstract: {},\r\n        view: {},\r\n        edit: {},\r\n        delete: {}\r\n      },\r\n\r\n      /**\r\n       * Provide custom controllers for each operation on a resource.\r\n       */\r\n      controllers: {\r\n        index: ['$scope', function($scope) {\r\n          // You can register when an item in the index has been clicked by doing the following.\r\n          $scope.$on('rowView', function(event, resource) {\r\n            console.log(resource);\r\n          });\r\n        }],\r\n        abstract: null,\r\n        view: ['$scope', function($scope) {\r\n          // To register when the form is loaded, you can use the following.\r\n          $scope.currentResource.loadFormPromise.then(function(form) {\r\n            console.log(form);\r\n          });\r\n\r\n          // To register when a resource is loaded, you can use the following.\r\n          $scope.currentResource.loadSubmissionPromise.then(function(resource) {\r\n            console.log(resource);\r\n          });\r\n        }],\r\n        create: ['$scope', function($scope) {\r\n          $scope.$on('formSubmission', function(err, submission) {\r\n            // A submission has been made... Do something...\r\n            console.log(submission);\r\n          });\r\n\r\n          // You can decide to tell the Formio Helper to allow this controller do the\r\n          // submission handling by passing the following back to the helper.\r\n          // return {handle: true};\r\n        }],\r\n        edit: ['$scope', function($scope) {\r\n          $scope.$on('formSubmission', function(err, submission) {\r\n            // A submission was updated... Do something...\r\n            console.log(submission);\r\n          });\r\n        }],\r\n        delete: ['$scope', '$stateParams', function($scope, $stateParams) {\r\n          $scope.$on('delete', function(err) {\r\n            // A submission was deleted.\r\n            console.log('Submission Deleted');\r\n          });\r\n        }]\r\n      }\r\n    };\r\n  });\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('formioApp')\r\n    .controller('HomeController', HomeController);\r\n\r\n  /** @ngInject */\r\n  function HomeController() {}\r\n})();\r\n\n(function(){\r\n\t'use strict';\r\n\t\r\n\tangular\r\n\t\t.module('formioApp')\r\n\t\t.controller('CalculateController', CalculateController);\r\n\r\n\t/** @ngInject */\r\n\tfunction CalculateController(){}\r\n})();\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('formioApp')\r\n    .run(runBlock);\r\n\r\n  /** @ngInject */\r\n  function runBlock($log, $rootScope, AppConfig) {\r\n    $log.debug('runBlock end');\r\n\r\n    // Add the forms to the root scope.\r\n    angular.forEach(AppConfig.forms, function(url, form) {\r\n      $rootScope[form] = url;\r\n    });\r\n  }\r\n\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('formioApp')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider, $urlRouterProvider, $injector, FormioProvider, AppConfig, FormioResourceProvider) {\r\n    FormioProvider.setBaseUrl(AppConfig.apiUrl);\r\n\r\n    $stateProvider\r\n      .state('home', {\r\n        url: '/',\r\n        templateUrl: 'app/home/home.html',\r\n        controller: 'HomeController',\r\n        controllerAs: 'home'\r\n      })\r\n\t  .state('calculate', {\r\n        url: '/calculate',\r\n        templateUrl: 'app/calculate/calculate.html',\r\n        controller: 'CalculateController',\r\n        controllerAs: 'calculate'\r\n      })\r\n\t  .state('calculatedb', {\r\n        url: '/calculatedb',\r\n        templateUrl: 'app/calculate/calculatedb.html',\r\n        controller: 'CalculateController',\r\n        controllerAs: 'calculate'\r\n      });\r\n\r\n    // Register all of the resources.\r\n    angular.forEach(AppConfig.resources, function(resource, name) {\r\n      FormioResourceProvider.register(name, resource.form, $injector.get(resource.resource + 'Provider'));\r\n    });\r\n\r\n    $urlRouterProvider.otherwise('/');\r\n  }\r\n\r\n})();\r\n\n/* global moment:false */\r\n(function() {\r\n  'use strict';\r\n  angular\r\n    .module('formioApp')\r\n    .constant('moment', moment);\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('formioApp')\r\n    .config(config);\r\n\r\n  /** @ngInject */\r\n  function config($logProvider, $locationProvider) {\r\n    $locationProvider.hashPrefix('');\r\n    $logProvider.debugEnabled(true);\r\n  }\r\n})();\r\n\nangular.module(\"formioApp\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/home/home.html\",\"<div class=\\\"row\\\"><div class=\\\"jumbotron\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-6 text-center\\\"><p class=\\\"lead\\\">You can easily embed your Forms and Resources into this application using.</p><div><pre>&lt;formio src=\\\"\\'https://yourapp.form.io/user/login\\'\\\"&gt;&lt;/formio&gt;</pre></div><p class=\\\"lead\\\">Need Help?</p><ul class=\\\"list-inline\\\"><li><a class=\\\"btn btn-lg btn-success\\\" target=\\\"_blank\\\" href=\\\"http://help.form.io/embedding/\\\">Embedding</a></li><li><a class=\\\"btn btn-lg btn-success\\\" target=\\\"_blank\\\" href=\\\"http://help.form.io\\\">Documentation</a></li></ul></div><div class=\\\"col-sm-6\\\"><p class=\\\"lead\\\">Example Form</p><div class=\\\"well\\\"><formio src=\\\"\\'https://formio.form.io/contact\\'\\\"></formio></div></div></div></div></div>\");\n$templateCache.put(\"app/calculate/calculate.html\",\"<div class=\\\"panel pane-default\\\"><div class=\\\"panel-heading\\\">Basic Calculate</div><div class=\\\"panel-body\\\"><formio src=\\\"\\'https://xhqzeurpmbbdztm.form.io/basiccal\\'\\\"></formio></div></div>\");\n$templateCache.put(\"app/calculate/calculatedb.html\",\"<div class=\\\"panel pane-default\\\"><div class=\\\"panel-heading\\\">Basic Calculate</div><div class=\\\"panel-body\\\"><formio-grid src=\\\"\\'https://xhqzeurpmbbdztm.form.io/basiccal\\'\\\" columns=\\\"[ {field:\\'data.a\\', key: \\'a\\', label:\\'First value\\'}, {field:\\'data.b\\', key: \\'b\\', label:\\'Second value\\'} ]\\\"></formio-grid></div></div>\");\n$templateCache.put(\"app/thanks/thanks.html\",\"<div class=\\\"row\\\"><div class=\\\"jumbotron\\\"><div class=\\\"row\\\">Thanks!</div></div></div>\");}]);"],"sourceRoot":"/source/"}